{
  "title": "Chart Values",
  "type": "object",
  "properties": {
    "replicaCount": {
      "type": "number",
      "description": "Number of replicas to deploy",
      "default": 1
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Docker image repository",
          "default": "offchainlabs/nitro-node"
        },
        "pullPolicy": {
          "type": "string",
          "description": "Docker image pull policy",
          "default": "IfNotPresent"
        },
        "tag": {
          "type": "string",
          "description": "Docker image tag. Overrides the chart appVersion.",
          "default": ""
        }
      }
    },
    "imagePullSecrets": {
      "type": "array",
      "description": "Docker registry pull secret names as an array",
      "default": [],
      "items": {}
    },
    "nameOverride": {
      "type": "string",
      "description": "String to partially override nitro.fullname",
      "default": ""
    },
    "fullnameOverride": {
      "type": "string",
      "description": "String to fully override nitro.fullname",
      "default": ""
    },
    "commandOverride": {
      "type": "object",
      "description": "Command override for the nitro container",
      "default": {}
    },
    "livenessProbe": {
      "type": "object",
      "description": "Liveness probe configuration",
      "default": {}
    },
    "readinessProbe": {
      "type": "object",
      "description": "Readiness probe configuration",
      "default": {}
    },
    "startupProbe": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable built in startup probe",
          "default": true
        },
        "failureThreshold": {
          "type": "number",
          "description": "Number of failures before pod is considered unhealthy",
          "default": 2419200
        },
        "periodSeconds": {
          "type": "number",
          "description": "Number of seconds between startup probes",
          "default": 1
        }
      }
    },
    "updateStrategy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Update strategy type",
          "default": "RollingUpdate"
        },
        "rollingUpdate": {
          "type": "object",
          "properties": {
            "partition": {
              "type": "number",
              "description": "Partition to update",
              "default": 0
            }
          }
        }
      }
    },
    "persistence": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable persistence",
          "default": true
        },
        "size": {
          "type": "string",
          "description": "Size of the persistent volume claim",
          "default": "500Gi"
        },
        "storageClassName": {
          "type": [
            "string",
            "null"
          ],
          "description": "Storage class of the persistent volume claim",
          "default": null,
          "nullable": true
        }
      }
    },
    "serviceMonitor": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable service monitor CRD for prometheus operator",
          "default": false
        },
        "portName": {
          "type": "string",
          "description": "Name of the port to monitor",
          "default": "metrics"
        },
        "path": {
          "type": "string",
          "description": "Path to monitor",
          "default": "/debug/metrics/prometheus"
        },
        "interval": {
          "type": "string",
          "description": "Interval to monitor",
          "default": "5s"
        }
      }
    },
    "perReplicaService": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable a service for each sts replica",
          "default": false
        }
      }
    },
    "jwtSecret": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable a jwt secret for use with the stateless validator",
          "default": false
        },
        "value": {
          "type": "string",
          "description": "Value of the jwt secret for use with the stateless validator",
          "default": ""
        }
      }
    },
    "auth": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable auth for the stateless validator",
          "default": false
        }
      }
    },
    "pdb": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable pod disruption budget",
          "default": false
        },
        "minAvailable": {
          "type": "string",
          "description": "Minimum number of pods available",
          "default": "75%"
        },
        "maxUnavailable": {
          "type": "string",
          "description": "Maximum number of pods unavailable",
          "default": ""
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Create a service account",
          "default": true
        },
        "annotations": {
          "type": "object",
          "description": "Annotations for the service account",
          "default": {}
        },
        "name": {
          "type": "string",
          "description": "Name of the service account",
          "default": ""
        }
      }
    },
    "podAnnotations": {
      "type": "object",
      "description": "Annotations for the pod",
      "default": {}
    },
    "podSecurityContext": {
      "type": "object",
      "properties": {
        "fsGroup": {
          "type": "number",
          "description": "Group id for the pod",
          "default": 1000
        }
      }
    },
    "securityContext": {
      "type": "object",
      "description": "Security context for the container",
      "default": {}
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Service type",
          "default": "ClusterIP"
        }
      }
    },
    "resources": {
      "type": "object",
      "description": "Resources for the container",
      "default": {}
    },
    "nodeSelector": {
      "type": "object",
      "description": "Node selector for the pod",
      "default": {}
    },
    "tolerations": {
      "type": "array",
      "description": "Tolerations for the pod",
      "default": [],
      "items": {}
    },
    "affinity": {
      "type": "object",
      "description": "Affinity for the pod",
      "default": {}
    },
    "additionalVolumeClaims": {
      "type": "array",
      "description": "Additional volume claims for the pod",
      "default": [],
      "items": {}
    },
    "configmap": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable a configmap for the nitro container",
          "default": true
        },
        "data": {
          "type": "object",
          "properties": {
            "http": {
              "type": "object",
              "properties": {
                "addr": {
                  "type": "string",
                  "description": "Address to bind http service to",
                  "default": "0.0.0.0"
                },
                "api": {
                  "type": "array",
                  "description": "List of apis to enable",
                  "default": [
                    "arb",
                    "personal",
                    "eth",
                    "net",
                    "web3",
                    "txpool",
                    "arbdebug"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "corsdomain": {
                  "type": "string",
                  "description": "CORS domain",
                  "default": "*"
                },
                "port": {
                  "type": "number",
                  "description": "Port to bind http service to",
                  "default": 8547
                },
                "rpcprefix": {
                  "type": "string",
                  "description": "Prefix for rpc calls",
                  "default": "/rpc"
                },
                "vhosts": {
                  "type": "string",
                  "description": "Vhosts to allow",
                  "default": "*"
                }
              }
            },
            "parent-chain": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the parent chain",
                  "default": 1
                },
                "connection": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "URL of the parent chain",
                      "default": ""
                    }
                  }
                }
              }
            },
            "chain": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of the chain",
                  "default": 42161
                }
              }
            },
            "log-type": {
              "type": "string",
              "description": "Type of log",
              "default": "json"
            },
            "metrics": {
              "type": "boolean",
              "description": "Enable metrics",
              "default": false
            },
            "metrics-server": {
              "type": "object",
              "properties": {
                "addr": {
                  "type": "string",
                  "description": "Address to bind metrics server to",
                  "default": "0.0.0.0"
                },
                "port": {
                  "type": "number",
                  "description": "Port to bind metrics server to",
                  "default": 6070
                }
              }
            },
            "persistent": {
              "type": "object",
              "properties": {
                "chain": {
                  "type": "string",
                  "description": "Path to persistent chain data",
                  "default": "/home/user/data/"
                }
              }
            },
            "ws": {
              "type": "object",
              "properties": {
                "addr": {
                  "type": "string",
                  "description": "Address to bind ws service to",
                  "default": "0.0.0.0"
                },
                "api": {
                  "type": "array",
                  "description": "List of apis to enable",
                  "default": [
                    "net",
                    "web3",
                    "eth",
                    "arb"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "port": {
                  "type": "number",
                  "description": "Port to bind ws service to",
                  "default": 8548
                },
                "rpcprefix": {
                  "type": "string",
                  "description": "Prefix for rpc calls",
                  "default": "/ws"
                }
              }
            }
          }
        }
      }
    },
    "validator": {
      "type": "object",
      "properties": {
        "image": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string",
              "description": "Docker image repository",
              "default": ""
            },
            "tag": {
              "type": "string",
              "description": "Docker image tag",
              "default": ""
            }
          }
        },
        "enabled": {
          "type": "boolean",
          "description": "Enable the stateless validator",
          "default": false
        },
        "configmap": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "auth": {
                  "type": "object",
                  "properties": {
                    "addr": {
                      "type": "string",
                      "description": "Address to bind auth service to",
                      "default": "0.0.0.0"
                    },
                    "port": {
                      "type": "number",
                      "description": "Port to bind auth service to",
                      "default": 8549
                    },
                    "origins": {
                      "type": "string",
                      "description": "Origins to allow to access auth service",
                      "default": "*"
                    },
                    "jwtsecret": {
                      "type": "string",
                      "description": "Path to jwt secret for auth service",
                      "default": "/secrets/jwtsecret"
                    }
                  }
                }
              }
            }
          }
        },
        "extraArgs": {
          "type": "array",
          "description": "Extra arguments for the validator container",
          "default": [],
          "items": {}
        },
        "statefulset": {
          "type": "object",
          "properties": {
            "useConfigmap": {
              "type": "boolean",
              "description": "Use the configmap for the validator container",
              "default": true
            },
            "auth": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable the auth service for the validator statefulset",
                  "default": true
                },
                "port": {
                  "type": "number",
                  "description": "Port to bind auth service to",
                  "default": 8549
                }
              }
            },
            "extraLabels": {
              "type": "object",
              "description": "Extra labels for the liveness probe",
              "default": {}
            },
            "livenessProbe": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable the liveness probe for the validator statefulset",
                  "default": true
                },
                "tcpSocket": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string",
                      "description": "Port to probe",
                      "default": "auth"
                    }
                  }
                },
                "initialDelaySeconds": {
                  "type": "number",
                  "description": "Initial delay for the liveness probe",
                  "default": 30
                },
                "periodSeconds": {
                  "type": "number",
                  "description": "Period for the liveness probe",
                  "default": 10
                }
              }
            },
            "readinessProbe": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable the readiness probe for the validator statefulset",
                  "default": true
                },
                "tcpSocket": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string",
                      "description": "Port to probe",
                      "default": "auth"
                    }
                  }
                },
                "initialDelaySeconds": {
                  "type": "number",
                  "description": "Initial delay for the readiness probe",
                  "default": 3
                },
                "periodSeconds": {
                  "type": "number",
                  "description": "Period for the readiness probe",
                  "default": 3
                }
              }
            },
            "startupProbe": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable the startup probe for the validator statefulset",
                  "default": false
                }
              }
            },
            "resources": {
              "type": "object",
              "description": "Resources for the validator container",
              "default": {}
            },
            "extraEnv": {
              "type": "object",
              "description": "Extra environment variables for the validator container",
              "default": {}
            },
            "metrics": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Enable metrics for the validator statefulset",
                  "default": false
                }
              }
            },
            "podAnnotations": {
              "type": "object",
              "description": "Annotations for the stateless validator pod",
              "default": {}
            }
          }
        }
      }
    }
  }
}
